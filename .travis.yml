language: generic

matrix:
  include:
    # Linux / Python 2
    - os: linux
      env:
        - PYTHON=python2
        - CACHE_NAME=linux_py2
      dist: trusty
      sudo: required
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.cache/wheels
      before_cache:
        - rm -rf $HOME/.cache/pip/log
    # Linux / Python 3
    - os: linux
      env:
        - PYTHON=python3
        - CACHE_NAME=linux_py3
      dist: trusty
      sudo: required
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.cache/wheels
      before_cache:
        - rm -rf $HOME/.cache/pip/log
    # OSX / Python 2
    - os: osx
      osx_image: xcode8
      env:
        - PYTHON=python2
        - CACHE_NAME=osx_py2
      cache:
        directories:
          - $HOME/Library/Caches/pip
          - $HOME/Library/Caches/wheels
      before_cache:
        - rm -rf $HOME/Library/Caches/pip/log
    # OSX / Python 3
    - os: osx
      osx_image: xcode8
      env:
        - PYTHON=python3
        - CACHE_NAME=osx_py3
      cache:
        directories:
          - $HOME/Library/Caches/pip
          - $HOME/Library/Caches/wheels
      before_cache:
        - rm -rf $HOME/Library/Caches/pip/log

before_install:
  - |
    (
    set -ex
    # Bootstrap dev environment.
    bootstrap_cmd=(./bootstrap.sh)
    if ! [ "$PYTHON" = 'python3' -a -n "$TRAVIS_TAG" ]
    then
      bootstrap_cmd+=('--tests-only')
    fi
    bootstrap_cmd+=("$PYTHON")
    "${bootstrap_cmd[@]}"
    # List installed packages versions.
    $PYTHON -m pip list
    )

install: true

script:
  - git fetch --unshallow
  - $PYTHON setup.py patch_version
  - $PYTHON setup.py test

before_deploy:
  - |
    (
    set -ex
    case "$TRAVIS_OS_NAME" in
    osx)
      if [ $PYTHON = python3 ]
      then
        $PYTHON setup.py bdist_dmg
      fi
      ;;
    linux)
      $PYTHON setup.py bdist_{egg,wheel}
      if [ $PYTHON = python3 ]
      then
        ./linux/debuild.sh -us -uc
      fi
      ;;
    esac
    # Not all builds will produce artifacts.
    du -hs dist/* || true
    )

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: "oevnqcK1AKqtYg6KuA9VjsrvXLl0qbSjJRWWvqJthXxRobGDdaY7asNexemzogUlqIoeJcbmdmirp3pBTRhEWtxCUZa+/TgQ/0H9nMPT4pPo+7Tsucj3bKMIoXK7PUsomOMjM0QnlzaSk85rnrMzdPrl1d6DuW/V8A5ChsHW1k8="
  draft: true
  file_glob: true
  file:
    - "dist/*.deb"
    - "dist/*.dmg"
    - "dist/*.egg"
    - "dist/*.whl"
  on:
    tags: true
